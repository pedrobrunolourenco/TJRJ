// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TJRJ.Infra.Data;

#nullable disable

namespace TJRJ.Infra.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241026143945_Recriando o banco")]
    partial class Recriandoobanco
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TJRJ.Domain.Entities.Assunto", b =>
                {
                    b.Property<int>("CodAs")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.HasKey("CodAs");

                    b.ToTable("Assunto", (string)null);
                });

            modelBuilder.Entity("TJRJ.Domain.Entities.Autor", b =>
                {
                    b.Property<int>("CodAu")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar");

                    b.HasKey("CodAu");

                    b.ToTable("Autor", (string)null);
                });

            modelBuilder.Entity("TJRJ.Domain.Entities.Livro", b =>
                {
                    b.Property<int>("CodI")
                        .HasColumnType("int");

                    b.Property<string>("AnoPublicacao")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("varchar");

                    b.Property<int>("Edicao")
                        .HasColumnType("int");

                    b.Property<string>("Editora")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar");

                    b.HasKey("CodI");

                    b.ToTable("Livro", (string)null);
                });

            modelBuilder.Entity("TJRJ.Domain.Entities.Livro_Assunto", b =>
                {
                    b.Property<int>("Livro_CodI")
                        .HasColumnType("int");

                    b.Property<int>("Assunto_CodAs")
                        .HasColumnType("int");

                    b.HasKey("Livro_CodI", "Assunto_CodAs");

                    b.HasIndex("Assunto_CodAs");

                    b.ToTable("Livro_Assunto", (string)null);
                });

            modelBuilder.Entity("TJRJ.Domain.Entities.Livro_Autor", b =>
                {
                    b.Property<int>("Livro_CodI")
                        .HasColumnType("int");

                    b.Property<int>("Autor_CodAu")
                        .HasColumnType("int");

                    b.Property<int>("LivroCodI")
                        .HasColumnType("int");

                    b.HasKey("Livro_CodI", "Autor_CodAu");

                    b.HasIndex("Autor_CodAu");

                    b.HasIndex("LivroCodI");

                    b.ToTable("Livro_Autor", (string)null);
                });

            modelBuilder.Entity("TJRJ.Domain.Entities.Livro_Assunto", b =>
                {
                    b.HasOne("TJRJ.Domain.Entities.Assunto", "Assunto")
                        .WithMany("Livro_Assuntos")
                        .HasForeignKey("Assunto_CodAs")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TJRJ.Domain.Entities.Livro", "Livro")
                        .WithMany("LivroAssuntos")
                        .HasForeignKey("Livro_CodI")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Assunto");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("TJRJ.Domain.Entities.Livro_Autor", b =>
                {
                    b.HasOne("TJRJ.Domain.Entities.Autor", "Autor")
                        .WithMany("Livro_Autores")
                        .HasForeignKey("Autor_CodAu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TJRJ.Domain.Entities.Livro", "Livro")
                        .WithMany()
                        .HasForeignKey("LivroCodI")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TJRJ.Domain.Entities.Livro", null)
                        .WithMany("LivrosAutores")
                        .HasForeignKey("Livro_CodI")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("TJRJ.Domain.Entities.Assunto", b =>
                {
                    b.Navigation("Livro_Assuntos");
                });

            modelBuilder.Entity("TJRJ.Domain.Entities.Autor", b =>
                {
                    b.Navigation("Livro_Autores");
                });

            modelBuilder.Entity("TJRJ.Domain.Entities.Livro", b =>
                {
                    b.Navigation("LivroAssuntos");

                    b.Navigation("LivrosAutores");
                });
#pragma warning restore 612, 618
        }
    }
}
